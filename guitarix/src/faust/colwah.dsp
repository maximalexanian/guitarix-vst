// generated automatically
// DO NOT MODIFY!
declare id "colwah";
declare name "ColorSound Wah";
declare category "Guitar Effects";
declare shortname "ColorSound Wah";
declare description "ColorSound Wah";

import("stdfaust.lib");
import("guitarix.lib");

process(x) = x : _<:*(dry),(*(wet) : pre : fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0),(a1/a0,a2/a0,a3/a0,a4/a0))):>_ with {
    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    wet = wah_ctrl.wet_dry;
    dry = 1 - wet;
    pre = fi.dcblockerat(156.537925581);

    Wah1 = (x : an.amp_follower_ud(0.01,0.1) : min(1) : max(0.02) ) : si.smooth(s);

    Wah2 = wah_ctrl.wah : max(0.01) : Inverted(1) : LogPot(5) : si.smooth(s);
 
    sl = wah_ctrl.mode;

    Wah3 = (os.oscs(freq) + 1) / 2 : min(0.98) : max(0.02) : Inverted(1) with {
        freq = wah_ctrl.freq;
    }; 

    Wah = select3(sl, Wah2, Wah1, Wah3);
    
    b0 = Wah*(Wah*pow(fs,2)*(fs*(8.31249052050881e-22*fs + 1.912505767204e-17) + 2.9122542229415e-14) + fs*(fs*(fs*(-8.22579827731233e-22*fs - 1.89445663105706e-17) - 2.92311751105741e-14) - 6.25519484069141e-13)) + fs*(fs*(fs*(-2.66926675132622e-21*fs - 8.43534115306834e-17) - 1.31405791553819e-13) - 6.81633101368958e-13);

    b1 = Wah*(Wah*pow(fs,3)*(-3.32499620820352e-21*fs - 3.825011534408e-17) + fs*(pow(fs,2)*(3.29031931092493e-21*fs + 3.78891326211413e-17) - 1.25103896813828e-12)) + fs*(pow(fs,2)*(1.06770670053049e-20*fs + 1.68706823061367e-16) - 1.36326620273792e-12);

    b2 = Wah*(Wah*pow(fs,2)*(4.98749431230529e-21*pow(fs,2) - 5.824508445883e-14) + pow(fs,2)*(-4.9354789663874e-21*pow(fs,2) + 5.84623502211483e-14)) + pow(fs,2)*(-1.60156005079573e-20*pow(fs,2) + 2.62811583107638e-13);

    b3 = Wah*(Wah*pow(fs,3)*(-3.32499620820352e-21*fs + 3.825011534408e-17) + fs*(pow(fs,2)*(3.29031931092493e-21*fs - 3.78891326211413e-17) + 1.25103896813828e-12)) + fs*(pow(fs,2)*(1.06770670053049e-20*fs - 1.68706823061367e-16) + 1.36326620273792e-12);

    b4 = Wah*(Wah*pow(fs,2)*(fs*(8.31249052050881e-22*fs - 1.912505767204e-17) + 2.9122542229415e-14) + fs*(fs*(fs*(-8.22579827731233e-22*fs + 1.89445663105706e-17) - 2.92311751105741e-14) + 6.25519484069141e-13)) + fs*(fs*(fs*(-2.66926675132622e-21*fs + 8.43534115306834e-17) - 1.31405791553819e-13) + 6.81633101368958e-13);

    a0 = Wah*(Wah*fs*(fs*(fs*(-6.9713352578405e-20*fs - 5.83030654431973e-18) - 2.29684974478901e-14) - 2.35672055328543e-13) + fs*(fs*(fs*(3.97687174092932e-19*fs + 2.70551577331849e-17) + 1.90255378851155e-14) + 7.09396691797023e-13)) + fs*(fs*(fs*(6.54938497087849e-21*fs + 5.15430968663743e-18) + 1.2663530557943e-13) + 3.94769224069978e-12) + 1.63948058636323e-11;

    a1 = Wah*(Wah*fs*(pow(fs,2)*(2.7885341031362e-19*fs + 1.16606130886395e-17) - 4.71344110657085e-13) + fs*(pow(fs,2)*(-1.59074869637173e-18*fs - 5.41103154663699e-17) + 1.41879338359405e-12)) + fs*(pow(fs,2)*(-2.6197539883514e-20*fs - 1.03086193732749e-17) + 7.89538448139956e-12) + 6.55792234545291e-11;

    a2 = Wah*(Wah*pow(fs,2)*(-4.1828011547043e-19*pow(fs,2) + 4.59369948957802e-14) + pow(fs,2)*(2.38612304455759e-18*pow(fs,2) - 3.8051075770231e-14)) + pow(fs,2)*(3.9296309825271e-20*pow(fs,2) - 2.5327061115886e-13) + 9.83688351817936e-11;

    a3 = Wah*(Wah*fs*(pow(fs,2)*(2.7885341031362e-19*fs - 1.16606130886395e-17) + 4.71344110657085e-13) + fs*(pow(fs,2)*(-1.59074869637173e-18*fs + 5.41103154663699e-17) - 1.41879338359405e-12)) + fs*(pow(fs,2)*(-2.6197539883514e-20*fs + 1.03086193732749e-17) - 7.89538448139956e-12) + 6.55792234545291e-11;

    a4 = Wah*(Wah*fs*(fs*(fs*(-6.9713352578405e-20*fs + 5.83030654431973e-18) - 2.29684974478901e-14) + 2.35672055328543e-13) + fs*(fs*(fs*(3.97687174092932e-19*fs - 2.70551577331849e-17) + 1.90255378851155e-14) - 7.09396691797023e-13)) + fs*(fs*(fs*(6.54938497087849e-21*fs - 5.15430968663743e-18) + 1.2663530557943e-13) - 3.94769224069978e-12) + 1.63948058636323e-11;
};
