#!/usr/bin/env python
# encoding: utf-8

import sys, os, TaskGen, ctypes, wscript_helper

def configure(conf):
    pass

@TaskGen.feature('test_loadable')
def test_loadable(self):
    def link_and_test(lib=self.link_task.outputs[0].bldpath(self.env), link=self.link_task.run):
        link()
        try:
            ctypes.cdll.LoadLibrary(lib)
        except Exception as e:
            raise RuntimeError("LADSPA load test failed: %s" % e)
    self.link_task.run = link_and_test

def build(bld):
    bsources = [
        '../gx_head/engine/gx_json.cpp',
        '../gx_head/engine/gx_faust_plugins.cpp',
        '../gx_head/engine/gx_internal_plugins.cpp',
        '../gx_head/engine/gx_engine_audio.cpp',
        '../gx_head/engine/gx_paramtable.cpp',
        '../gx_head/engine/gx_convolver.cpp',
        '../gx_head/engine/gx_resampler.cpp',
        '../gx_head/engine/gx_system.cpp',
        '../gx_head/engine/gx_logging.cpp',
        '../gx_head/engine/gx_pluginloader.cpp',
        ## lib can't be used (-fPIC)
        '../plugins/generated/zita_rev1.cc',
        '../plugins/vibe.cc',
        '../plugins/abgate.cc',
        '../plugins/generated/ts9sim.cc',
        '../plugins/generated/aclipper.cc',
        '../plugins/generated/mxrdist.cc',
        '../plugins/generated/bossds1.cc',
        '../plugins/generated/flanger_gx.cc',
        '../plugins/generated/mbc.cc',
        '../plugins/generated/mbcs.cc',
        '../plugins/generated/mbd.cc',
        '../plugins/generated/mbe.cc',
        '../plugins/generated/mbdel.cc',
        '../plugins/generated/mbchor.cc',
        '../plugins/reversedelay.cc',
        '../plugins/generated/gcb_95.cc',
        '../plugins/generated/hfb.cc',
        '../plugins/generated/hogsfoot.cc',
        '../plugins/generated/lpbboost.cc',
        '../plugins/generated/rolandwah.cc',
        '../plugins/metronome.cc',
    ]

    src = ['ladspa_guitarix.cpp'] + bsources
    incl = ['../headers', '..','../gx_head/engine','../plugins','../../libgxwmm','../../libgxw']
    lib = []
    if sys.platform.startswith("linux"):
        lib.append('dl')
    uselib = ['JACK', 'SNDFILE', 'GTHREAD', 'GMODULE_EXPORT',
              'GLIBMM', 'GIOMM', 'FFTW3', 'BOOST_SYSTEM', 'LILV']
    wscript_helper.add_zita_convolver(bld, uselib, src, incl)
    wscript_helper.add_zita_resampler(bld, uselib, src, incl)
    ladspa_plugin = bld(
        #features='cxx cprogram',  ## for debugging
        features='cxx cshlib test_loadable',
        includes = incl,
        lib = lib,
        uselib = uselib,
        #uselib_local = ["plugins"], ## needs -fPIC
        cxxflags = ["-fvisibility=hidden"],
        defines = ["LADSPA_SO"],
        target   = 'ladspa_guitarix',
        source   = src,
        install_path = '${LADSPADIR}',
        chmod = 0o755,
        )
    ladspa_plugin.env['shlib_PATTERN'] = '%s.so'
    bld.install_files('${SHAREDIR}/ladspa/rdf', 'guitarix_amp.rdf')
