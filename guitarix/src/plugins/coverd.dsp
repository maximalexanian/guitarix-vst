// generated automatically
// DO NOT MODIFY!
declare id "coverd";
declare name "C Overdrive";
declare category "Distortion";
declare shortname "C Overdrive";
declare description "Colorsound Overdrive";

import("stdfaust.lib");

    LogPot(a, x) = ba.if(a, (exp(a * x) - 1) / (exp(a) - 1), x);
    Inverted(b, x) = ba.if(b, 1 - x, x);
    s = 0.993;
    fs = float(ma.SR);
    pre = _;
    
    wet = vslider("wet_dry[name:Wet/Dry][tooltip:percentage of processed signal in output signal]",  100, 0, 100, 1) : /(100);
    dry = 1 - wet;

p1 = fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0)) : overdrive with {

        Gain = vslider("Volume[name:Volume]", 0.5, 0, 1, 0.01) : Inverted(0) : LogPot(1) : si.smooth(s);
    
    overdrive(x) = (x*(abs(x) + 0.5)/(x*x + (0.5-1)*abs(x) + 1)) * Gain;
    
    b0 = Gain*fs*(fs*(fs*(fs*(3.97647190322603e-27*fs - 4.95880631786145e-19) - 2.12282875792926e-17) - 2.95727845714664e-18) - 2.63401345836477e-31) + fs*(fs*(fs*(fs*(-7.42702058644117e-27*fs + 7.89889133199585e-19) + 3.48875412150739e-17) + 5.04598373508118e-17) + 6.57172990476634e-18);

    b1 = Gain*fs*(fs*(fs*(fs*(-1.98823595161302e-26*fs + 1.48764189535843e-18) + 2.12282875792926e-17) - 2.95727845714664e-18) - 7.9020403750943e-31) + fs*(fs*(fs*(fs*(3.71351029322059e-26*fs - 2.36966739959876e-18) - 3.48875412150739e-17) + 5.04598373508118e-17) + 1.9715189714299e-17);

    b2 = Gain*fs*(fs*(fs*(fs*(3.97647190322603e-26*fs - 9.91761263572289e-19) + 4.24565751585853e-17) + 5.91455691429328e-18) - 5.26802691672954e-31) + fs*(fs*(fs*(fs*(-7.42702058644117e-26*fs + 1.57977826639917e-18) - 6.97750824301479e-17) - 1.00919674701624e-16) + 1.31434598095327e-17);

    b3 = Gain*fs*(fs*(fs*(fs*(-3.97647190322603e-26*fs - 9.91761263572289e-19) - 4.24565751585853e-17) + 5.91455691429328e-18) + 5.26802691672954e-31) + fs*(fs*(fs*(fs*(7.42702058644117e-26*fs + 1.57977826639917e-18) + 6.97750824301479e-17) - 1.00919674701624e-16) - 1.31434598095327e-17);

    b4 = Gain*fs*(fs*(fs*(fs*(1.98823595161302e-26*fs + 1.48764189535843e-18) - 2.12282875792926e-17) - 2.95727845714664e-18) + 7.9020403750943e-31) + fs*(fs*(fs*(fs*(-3.71351029322059e-26*fs - 2.36966739959876e-18) + 3.48875412150739e-17) + 5.04598373508118e-17) - 1.9715189714299e-17);

    b5 = Gain*fs*(fs*(fs*(fs*(-3.97647190322603e-27*fs - 4.95880631786145e-19) + 2.12282875792926e-17) - 2.95727845714664e-18) + 2.63401345836477e-31) + fs*(fs*(fs*(fs*(7.42702058644117e-27*fs + 7.89889133199585e-19) - 3.48875412150739e-17) + 5.04598373508118e-17) - 6.57172990476634e-18);

    a0 = Gain*(fs*(fs*(fs*(fs*(-2.40788246727257e-24*fs - 1.83337089189981e-19) - 1.0884037880131e-17) - 2.17663092851014e-16) - 5.23377299648722e-16) - 4.66166061483529e-29) + fs*(fs*(fs*(fs*(2.78713041660513e-24*fs + 2.03907877623046e-19) + 1.25272695161612e-17) + 3.13137866048362e-16) + 1.42685467015479e-15) + 1.16306066588601e-15;

    a1 = Gain*(fs*(fs*(fs*(fs*(1.20394123363628e-23*fs + 5.50011267569942e-19) + 1.0884037880131e-17) - 2.17663092851014e-16) - 1.57013189894617e-15) - 2.33083030741764e-28) + fs*(fs*(fs*(fs*(-1.39356520830257e-23*fs - 6.11723632869138e-19) - 1.25272695161612e-17) + 3.13137866048362e-16) + 4.28056401046438e-15) + 5.81530332943008e-15;

    a2 = Gain*(fs*(fs*(fs*(fs*(-2.40788246727257e-23*fs - 3.66674178379961e-19) + 2.17680757602621e-17) + 4.35326185702027e-16) - 1.04675459929744e-15) - 4.66166061483529e-28) + fs*(fs*(fs*(fs*(2.78713041660513e-23*fs + 4.07815755246092e-19) - 2.50545390323223e-17) - 6.26275732096724e-16) + 2.85370934030959e-15) + 1.16306066588602e-14;

    a3 = Gain*(fs*(fs*(fs*(fs*(2.40788246727257e-23*fs - 3.66674178379961e-19) - 2.17680757602621e-17) + 4.35326185702027e-16) + 1.04675459929744e-15) - 4.66166061483529e-28) + fs*(fs*(fs*(fs*(-2.78713041660513e-23*fs + 4.07815755246092e-19) + 2.50545390323223e-17) - 6.26275732096724e-16) - 2.85370934030959e-15) + 1.16306066588602e-14;

    a4 = Gain*(fs*(fs*(fs*(fs*(-1.20394123363628e-23*fs + 5.50011267569942e-19) - 1.0884037880131e-17) - 2.17663092851014e-16) + 1.57013189894617e-15) - 2.33083030741764e-28) + fs*(fs*(fs*(fs*(1.39356520830257e-23*fs - 6.11723632869138e-19) + 1.25272695161612e-17) + 3.13137866048362e-16) - 4.28056401046438e-15) + 5.81530332943008e-15;

    a5 = Gain*(fs*(fs*(fs*(fs*(2.40788246727257e-24*fs - 1.83337089189981e-19) + 1.0884037880131e-17) - 2.17663092851014e-16) + 5.23377299648722e-16) - 4.66166061483529e-29) + fs*(fs*(fs*(fs*(-2.78713041660513e-24*fs + 2.03907877623046e-19) - 1.25272695161612e-17) + 3.13137866048362e-16) - 1.42685467015479e-15) + 1.16306066588601e-15;
};

p2 =  fi.iir((b0/a0,b1/a0,b2/a0,b3/a0,b4/a0,b5/a0),(a1/a0,a2/a0,a3/a0,a4/a0,a5/a0)) with {

        Bass = vslider("Bass[name:Bass]", 0.5, 0, 1, 0.01) : Inverted(1) : si.smooth(s);
    
        Treble = vslider("Treble[name:Treble]", 0.5, 0, 1, 0.01) : Inverted(0) : si.smooth(s);
    
    b0 = Bass*(Bass*pow(fs,2)*(fs*(fs*(-2.08000946656956e-27*fs + 3.29838842203039e-21) + 1.40184395777108e-19) + 3.53984542064284e-34) + fs*(fs*(fs*(fs*(3.70058120006252e-25*fs + 3.84955928653808e-22) + 1.66273197458755e-18) + 7.0086493617754e-17) + 1.76992271032142e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(6.58813040006868e-24*fs + 2.80345974471016e-22) + 7.07969084128568e-37) + pow(fs,3)*(fs*(1.91438372832372e-27*fs - 9.28894735127254e-24) - 2.28170831993645e-23)) + Treble*(Bass*pow(fs,3)*(fs*(-6.58813040006868e-24*fs - 2.80345974471016e-22) - 7.07969084128568e-37) + pow(fs,3)*(fs*(6.88899571441955e-24*fs + 2.95929420463955e-22) + 1.1408541599688e-23)) + pow(fs,3)*(fs*(-1.0025039931634e-23*fs - 4.24692905313867e-22) - 6.08366393926321e-36)) + fs*(fs*(fs*(fs*(-3.8335982187148e-25*fs - 5.42251622369686e-21) - 1.95786469833648e-18) - 7.39993880685971e-17) - 2.85213539992201e-18);

    b1 = Bass*(Bass*pow(fs,2)*(fs*(fs*(1.04000473328478e-26*fs - 9.89516526609117e-21) - 1.40184395777108e-19) + 3.53984542064284e-34) + fs*(fs*(fs*(fs*(-1.85029060003126e-24*fs - 1.15486778596142e-21) - 1.66273197458755e-18) + 7.0086493617754e-17) + 5.30976813096426e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(-3.29406520003434e-23*fs - 8.41037923413049e-22) - 7.07969084128568e-37) + pow(fs,3)*(fs*(-9.57191864161859e-27*fs + 2.78668420538176e-23) + 2.28170831993645e-23)) + Treble*(Bass*pow(fs,3)*(fs*(3.29406520003434e-23*fs + 8.41037923413049e-22) + 7.07969084128568e-37) + pow(fs,3)*(fs*(-3.44449785720978e-23*fs - 8.87788261391865e-22) - 1.1408541599688e-23)) + pow(fs,3)*(fs*(5.012519965817e-23*fs + 1.2740787159416e-21) + 6.08366393926321e-36)) + fs*(fs*(fs*(fs*(1.9167991093574e-24*fs + 1.62675486710906e-20) + 1.95786469833648e-18) - 7.39993880685971e-17) - 8.55640619976602e-18);

    b2 = Bass*(Bass*pow(fs,2)*(fs*(fs*(-2.08000946656956e-26*fs + 6.59677684406078e-21) - 2.80368791554216e-19) - 7.07969084128568e-34) + fs*(fs*(fs*(fs*(3.70058120006252e-24*fs + 7.69911857307616e-22) - 3.32546394917509e-18) - 1.40172987235508e-16) + 3.53984542064284e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(6.58813040006868e-23*fs + 5.60691948942032e-22) - 1.41593816825714e-36) + pow(fs,3)*(fs*(1.91438372832372e-26*fs - 1.85778947025451e-23) + 4.56341663987291e-23)) + Treble*(Bass*pow(fs,3)*(fs*(-6.58813040006868e-23*fs - 5.60691948942032e-22) + 1.41593816825714e-36) + pow(fs,3)*(fs*(6.88899571441955e-23*fs + 5.9185884092791e-22) - 2.28170831993761e-23)) + pow(fs,3)*(fs*(-1.0025039931634e-22*fs - 8.49385810627733e-22) + 1.21673278785264e-35)) + fs*(fs*(fs*(fs*(-3.8335982187148e-24*fs - 1.08450324473937e-20) + 3.91572939667295e-18) + 1.47998776137194e-16) - 5.70427079984401e-18);

    b3 = Bass*(Bass*pow(fs,2)*(fs*(fs*(2.08000946656956e-26*fs + 6.59677684406078e-21) + 2.80368791554216e-19) - 7.07969084128568e-34) + fs*(fs*(fs*(fs*(-3.70058120006252e-24*fs + 7.69911857307616e-22) + 3.32546394917509e-18) - 1.40172987235508e-16) - 3.53984542064284e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(-6.58813040006868e-23*fs + 5.60691948942032e-22) + 1.41593816825714e-36) + pow(fs,3)*(fs*(-1.91438372832372e-26*fs - 1.85778947025451e-23) - 4.56341663987291e-23)) + Treble*(Bass*pow(fs,3)*(fs*(6.58813040006868e-23*fs - 5.60691948942032e-22) - 1.41593816825714e-36) + pow(fs,3)*(fs*(-6.88899571441955e-23*fs + 5.9185884092791e-22) + 2.28170831993761e-23)) + pow(fs,3)*(fs*(1.0025039931634e-22*fs - 8.49385810627733e-22) - 1.21673278785264e-35)) + fs*(fs*(fs*(fs*(3.8335982187148e-24*fs - 1.08450324473937e-20) - 3.91572939667295e-18) + 1.47998776137194e-16) + 5.70427079984401e-18);

    b4 = Bass*(Bass*pow(fs,2)*(fs*(fs*(-1.04000473328478e-26*fs - 9.89516526609117e-21) + 1.40184395777108e-19) + 3.53984542064284e-34) + fs*(fs*(fs*(fs*(1.85029060003126e-24*fs - 1.15486778596142e-21) + 1.66273197458755e-18) + 7.0086493617754e-17) - 5.30976813096426e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(3.29406520003434e-23*fs - 8.41037923413049e-22) + 7.07969084128568e-37) + pow(fs,3)*(fs*(9.57191864161859e-27*fs + 2.78668420538176e-23) - 2.28170831993645e-23)) + Treble*(Bass*pow(fs,3)*(fs*(-3.29406520003434e-23*fs + 8.41037923413049e-22) - 7.07969084128568e-37) + pow(fs,3)*(fs*(3.44449785720978e-23*fs - 8.87788261391865e-22) + 1.1408541599688e-23)) + pow(fs,3)*(fs*(-5.012519965817e-23*fs + 1.2740787159416e-21) - 6.08366393926321e-36)) + fs*(fs*(fs*(fs*(-1.9167991093574e-24*fs + 1.62675486710906e-20) - 1.95786469833648e-18) - 7.39993880685971e-17) + 8.55640619976602e-18);

    b5 = Bass*(Bass*pow(fs,2)*(fs*(fs*(2.08000946656956e-27*fs + 3.29838842203039e-21) - 1.40184395777108e-19) + 3.53984542064284e-34) + fs*(fs*(fs*(fs*(-3.70058120006252e-25*fs + 3.84955928653808e-22) - 1.66273197458755e-18) + 7.0086493617754e-17) - 1.76992271032142e-31)) + Treble*(Bass*(Bass*pow(fs,3)*(fs*(-6.58813040006868e-24*fs + 2.80345974471016e-22) - 7.07969084128568e-37) + pow(fs,3)*(fs*(-1.91438372832372e-27*fs - 9.28894735127254e-24) + 2.28170831993645e-23)) + Treble*(Bass*pow(fs,3)*(fs*(6.58813040006868e-24*fs - 2.80345974471016e-22) + 7.07969084128568e-37) + pow(fs,3)*(fs*(-6.88899571441955e-24*fs + 2.95929420463955e-22) - 1.1408541599688e-23)) + pow(fs,3)*(fs*(1.0025039931634e-23*fs - 4.24692905313867e-22) + 6.08366393926321e-36)) + fs*(fs*(fs*(fs*(3.8335982187148e-25*fs - 5.42251622369686e-21) + 1.95786469833648e-18) - 7.39993880685971e-17) + 2.85213539992201e-18);

    a0 = Bass*(Bass*(fs*(fs*(fs*(fs*(-6.72581680534004e-24*fs - 4.41586600140972e-21) - 7.47371530788388e-19) - 9.57970935359556e-17) + 1.78867236680673e-28) + 4.51350125457133e-43) + fs*(fs*(fs*(fs*(7.09491773348213e-24*fs + 8.1036807179337e-21) + 2.55872993315156e-18) + 1.677855547693e-16) + 8.47611869896916e-17) - 1.90136609408475e-28) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(5.49427436280305e-24*fs - 3.14344447184204e-23) + 3.39044747960198e-22) - 7.60546437633897e-34) + pow(fs,2)*(fs*(fs*(1.11582073532266e-24*fs + 3.23543557700559e-22) + 8.5311710434333e-22) + 3.39044747959503e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(1.11390635159433e-24*fs + 3.18702063081927e-22) - 7.14108820102165e-34) - 1.80540050182853e-48) + pow(fs,2)*(fs*(fs*(-7.72208706599171e-24*fs - 6.05969681445433e-22) - 3.39044747958769e-22) + 7.605464376339e-34)) + pow(fs,2)*(fs*(fs*(-9.07610804066639e-25*fs - 3.13971543026984e-22) - 1.80077239576117e-20) - 1.69522373979748e-20)) + pow(fs,2)*(fs*(fs*(-2.23797473617709e-24*fs + 1.74849041434644e-22) + 1.74198245202729e-20) + 6.97469477751319e-35)) + fs*(fs*(fs*(fs*(3.22318393238815e-24*fs + 2.32489770791907e-21) + 5.44196016387214e-19) + 9.66029729825488e-17) + 4.5272406798381e-15) + 4.23805934949371e-15;

    a1 = Bass*(Bass*(fs*(fs*(fs*(fs*(3.36290840267002e-23*fs + 1.32475980042292e-20) + 7.47371530788388e-19) - 9.57970935359556e-17) + 5.3660171004202e-28) + 2.25675062728566e-42) + fs*(fs*(fs*(fs*(-3.54745886674106e-23*fs - 2.43110421538011e-20) - 2.55872993315156e-18) + 1.677855547693e-16) + 2.54283560969075e-16) - 9.50683047042375e-28) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-2.74713718140152e-23*fs + 9.43033341552612e-23) - 3.39044747960198e-22) - 7.60546437633897e-34) + pow(fs,2)*(fs*(fs*(-5.57910367661329e-24*fs - 9.70630673101678e-22) - 8.5311710434333e-22) + 3.39044747959503e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-5.56953175797167e-24*fs - 9.5610618924578e-22) + 7.14108820102165e-34) - 1.80540050182853e-48) + pow(fs,2)*(fs*(fs*(3.86104353299586e-23*fs + 1.8179090443363e-21) + 3.39044747958769e-22) + 7.605464376339e-34)) + pow(fs,2)*(fs*(fs*(4.53805402033319e-24*fs + 9.41914629080951e-22) + 1.80077239576117e-20) - 1.69522373979748e-20)) + pow(fs,2)*(fs*(fs*(1.11898736808855e-23*fs - 5.24547124303932e-22) - 1.74198245202729e-20) + 6.97469477751319e-35)) + fs*(fs*(fs*(fs*(-1.61159196619408e-23*fs - 6.9746931237572e-21) - 5.44196016387214e-19) + 9.66029729825488e-17) + 1.35817220395143e-14) + 2.11902967474685e-14;

    a2 = Bass*(Bass*(fs*(fs*(fs*(fs*(-6.72581680534004e-23*fs - 8.83173200281944e-21) + 1.49474306157678e-18) + 1.91594187071911e-16) + 3.57734473361347e-28) + 4.51350125457133e-42) + fs*(fs*(fs*(fs*(7.09491773348213e-23*fs + 1.62073614358674e-20) - 5.11745986630311e-18) - 3.35571109538599e-16) + 1.69522373979383e-16) - 1.90136609408475e-27) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(5.49427436280305e-23*fs - 6.28688894368408e-23) - 6.78089495920395e-22) + 1.52109287526779e-33) + pow(fs,2)*(fs*(fs*(1.11582073532266e-23*fs + 6.47087115401119e-22) - 1.70623420868666e-21) - 6.78089495919005e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(1.11390635159433e-23*fs + 6.37404126163853e-22) + 1.42821764020433e-33) + 3.61080100365706e-48) + pow(fs,2)*(fs*(fs*(-7.72208706599171e-23*fs - 1.21193936289087e-21) + 6.78089495917539e-22) - 1.5210928752678e-33)) + pow(fs,2)*(fs*(fs*(-9.07610804066639e-24*fs - 6.27943086053967e-22) + 3.60154479152234e-20) + 3.39044747959497e-20)) + pow(fs,2)*(fs*(fs*(-2.23797473617709e-23*fs + 3.49698082869288e-22) - 3.48396490405458e-20) - 1.39493895550264e-34)) + fs*(fs*(fs*(fs*(3.22318393238815e-23*fs + 4.64979541583813e-21) - 1.08839203277443e-18) - 1.93205945965098e-16) + 9.05448135967619e-15) + 4.23805934949371e-14;

    a3 = Bass*(Bass*(fs*(fs*(fs*(fs*(6.72581680534004e-23*fs - 8.83173200281944e-21) - 1.49474306157678e-18) + 1.91594187071911e-16) - 3.57734473361347e-28) + 4.51350125457133e-42) + fs*(fs*(fs*(fs*(-7.09491773348213e-23*fs + 1.62073614358674e-20) + 5.11745986630311e-18) - 3.35571109538599e-16) - 1.69522373979383e-16) - 1.90136609408475e-27) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-5.49427436280305e-23*fs - 6.28688894368408e-23) + 6.78089495920395e-22) + 1.52109287526779e-33) + pow(fs,2)*(fs*(fs*(-1.11582073532266e-23*fs + 6.47087115401119e-22) + 1.70623420868666e-21) - 6.78089495919005e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-1.11390635159433e-23*fs + 6.37404126163853e-22) - 1.42821764020433e-33) + 3.61080100365706e-48) + pow(fs,2)*(fs*(fs*(7.72208706599171e-23*fs - 1.21193936289087e-21) - 6.78089495917539e-22) - 1.5210928752678e-33)) + pow(fs,2)*(fs*(fs*(9.07610804066639e-24*fs - 6.27943086053967e-22) - 3.60154479152234e-20) + 3.39044747959497e-20)) + pow(fs,2)*(fs*(fs*(2.23797473617709e-23*fs + 3.49698082869288e-22) + 3.48396490405458e-20) - 1.39493895550264e-34)) + fs*(fs*(fs*(fs*(-3.22318393238815e-23*fs + 4.64979541583813e-21) + 1.08839203277443e-18) - 1.93205945965098e-16) - 9.05448135967619e-15) + 4.23805934949371e-14;

    a4 = Bass*(Bass*(fs*(fs*(fs*(fs*(-3.36290840267002e-23*fs + 1.32475980042292e-20) - 7.47371530788388e-19) - 9.57970935359556e-17) - 5.3660171004202e-28) + 2.25675062728566e-42) + fs*(fs*(fs*(fs*(3.54745886674106e-23*fs - 2.43110421538011e-20) + 2.55872993315156e-18) + 1.677855547693e-16) - 2.54283560969075e-16) - 9.50683047042375e-28) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(2.74713718140152e-23*fs + 9.43033341552612e-23) + 3.39044747960198e-22) - 7.60546437633897e-34) + pow(fs,2)*(fs*(fs*(5.57910367661329e-24*fs - 9.70630673101678e-22) + 8.5311710434333e-22) + 3.39044747959503e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(5.56953175797167e-24*fs - 9.5610618924578e-22) - 7.14108820102165e-34) - 1.80540050182853e-48) + pow(fs,2)*(fs*(fs*(-3.86104353299586e-23*fs + 1.8179090443363e-21) - 3.39044747958769e-22) + 7.605464376339e-34)) + pow(fs,2)*(fs*(fs*(-4.53805402033319e-24*fs + 9.41914629080951e-22) - 1.80077239576117e-20) - 1.69522373979748e-20)) + pow(fs,2)*(fs*(fs*(-1.11898736808855e-23*fs - 5.24547124303932e-22) + 1.74198245202729e-20) + 6.97469477751319e-35)) + fs*(fs*(fs*(fs*(1.61159196619408e-23*fs - 6.9746931237572e-21) + 5.44196016387214e-19) + 9.66029729825488e-17) - 1.35817220395143e-14) + 2.11902967474685e-14;

    a5 = Bass*(Bass*(fs*(fs*(fs*(fs*(6.72581680534004e-24*fs - 4.41586600140972e-21) + 7.47371530788388e-19) - 9.57970935359556e-17) - 1.78867236680673e-28) + 4.51350125457133e-43) + fs*(fs*(fs*(fs*(-7.09491773348213e-24*fs + 8.1036807179337e-21) - 2.55872993315156e-18) + 1.677855547693e-16) - 8.47611869896916e-17) - 1.90136609408475e-28) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-5.49427436280305e-24*fs - 3.14344447184204e-23) - 3.39044747960198e-22) - 7.60546437633897e-34) + pow(fs,2)*(fs*(fs*(-1.11582073532266e-24*fs + 3.23543557700559e-22) - 8.5311710434333e-22) + 3.39044747959503e-20)) + Treble*(Bass*(Bass*pow(fs,2)*(fs*(fs*(-1.11390635159433e-24*fs + 3.18702063081927e-22) + 7.14108820102165e-34) - 1.80540050182853e-48) + pow(fs,2)*(fs*(fs*(7.72208706599171e-24*fs - 6.05969681445433e-22) + 3.39044747958769e-22) + 7.605464376339e-34)) + pow(fs,2)*(fs*(fs*(9.07610804066639e-25*fs - 3.13971543026984e-22) + 1.80077239576117e-20) - 1.69522373979748e-20)) + pow(fs,2)*(fs*(fs*(2.23797473617709e-24*fs + 1.74849041434644e-22) - 1.74198245202729e-20) + 6.97469477751319e-35)) + fs*(fs*(fs*(fs*(-3.22318393238815e-24*fs + 2.32489770791907e-21) - 5.44196016387214e-19) + 9.66029729825488e-17) - 4.5272406798381e-15) + 4.23805934949371e-15;
};

process =  _<:*(dry),(*(wet) :p1:p2):>_;
